@model ElectiveTesting.ViewModels.ElectionCreateData

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Election</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.election.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.election.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.election.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.election.Electives, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt = 0;
                            List<ElectiveTesting.ViewModels.AssignedElectiveData> electives = ViewBag.Electives;

                            foreach (var elective in electives)
                            {
                                if (cnt++ % 2 == 0)
                                {
                                    @:</tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                           name="selectedElectives"
                                           value="@elective.ElectiveId"
                                           @(Html.Raw(elective.Assigned ? "checked=\"checked\"" : "")) />
                                           @elective.Name
                                @:</td>
                            }
                            @:</tr>
                        }
                    </table>
                </div>
            </div>

        <div class="form-group">
            @Html.Label("Participants", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label("All users")<div>@Html.Label("Invited users")</div>
                <table>
                    <tr>
                        <td>
                             
                                @Html.ListBoxFor(model => model.availableUsers, new MultiSelectList(Model.availableUsers, "Email"), new { size = "10", style = "width: 250px;" })

                                @*<input id="btnAddAll" type="button" value=" Add all " onclick="addallItems();" />*@
                            <div class="col-md-offset-2 col-md-10">
                                
                                <input id="btnAdd" type="button" value=" Add " onclick="addItem();" />
                                <input id="btnRemove" type="button" value=" Remove " onclick="removeItem();" />
                                <input id="btnRemoveAll" type="button" value=" Remove all " onclick="removeallItems();" />                                                
                            </div>
                            <select style="width: 250px;" class="cmbBox1" id="invitedUsers" multiple="multiple" name="invitedUsers" size="10"></select>

                        </td>
                    </tr>
                </table>
                <input type="submit" value="Create" class="btn btn-default" onclick="markAllInvited();" />   
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
$(function selectAllItems() {
    $("#inviteForm").submit(function () {
        $("#invitedUsers option").attr("selected", true);
    });
});
function addItem() {
    $("#availableUsers option:selected").appendTo("#invitedUsers");
    $("#invitedUsers option").attr("selected", false);
}
function markAllInvited() {
    $("#invitedUsers option:selected").appendTo("#invitedUsers");
    $("#invitedUsers option").attr("selected", true);
}
function addallItems() {
    $("#availableUsers option").appendTo("#invitedUsers");
    $("#invitedUsers option").attr("selected", false);
}
function removeItem() {
    $("#invitedUsers option:selected").appendTo("#availableUsers");
    $("#availableUsers option").attr("selected", false);
}
function removeallItems() {
    $("#invitedUsers option").appendTo("#availableUsers");
    $("#availableUsers option").attr("selected", false);
}
</script>